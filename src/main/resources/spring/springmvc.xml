<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context"
	    xmlns:aop="http://www.springframework.org/schema/aop"
	    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	<!-- 配置Controller扫描 -->
	<context:component-scan base-package="top.maniy.controller" />
<!-- 配置注解驱动 -->
	<mvc:annotation-driven />
	
	<!-- 对静态资源放行 -->
	<!--<mvc:resources location="/css/" mapping="/css/**"/>
	<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/fonts/" mapping="/fonts/**"/>-->
	<!-- 2.静态资源默认servlet配置 (1)加入对静态资源的处理：js,gif,png (2)允许使用"/"做整体映射 -->
	<!--<mvc:resources mapping="/*" location="WEB-INF/" />-->
	<mvc:default-servlet-handler />


	<!--&lt;!&ndash; Springmvc的异常处理器 &ndash;&gt;-->
	<!--<bean class="top.maniy.exception.CustomExceptionResolve"></bean>-->

	<!-- 上传图片配置实现类 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 上传图片的大小  单位B -->
		<property name="maxUploadSize" value="50000000"></property>
		<property name="maxInMemorySize" value="4096" />
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>


	<!-- 配置视图解析器 -->
	<bean	class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>

		<!-- 前缀 -->
		<property name="prefix" value="/WEB-INF/page/" />
		<!-- 后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>






	<!-- 定义一个任务类 -->
	<bean id="adminJob" class="top.maniy.quartz.AdminJob"></bean>


	<!-- jobDetailRemindHaveClass -->
	<bean id="jobDetailAdminNewContent" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="adminJob"></property>
		<property name="targetMethod" value="adminNewContent"></property>
		<property name="concurrent" value="true" /><!-- 作业不并发调度  -->
	</bean>

	<!-- 定义trigger 触发器 -->
	<bean id="cronTriggerAdminNewContent" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetailAdminNewContent"></property>
		<property name="cronExpression" value="0/60 * * * * ?"></property>
	</bean>

	<!-- 定义一个任务类 -->
	<bean id="myJob" class="top.maniy.test.MyJob"></bean>
	<!-- jobDetailRemindHaveClass -->
	<bean id="jobDetailRemindHaveClass" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="myJob"></property>
		<property name="targetMethod" value="remindHaveAClass"></property>
		<property name="concurrent" value="true" /><!-- 作业不并发调度  -->
	</bean>



	<!-- jobDetailRemindHaveClass -->
	<bean id="jobDetailRemindClassIsOver" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="myJob"></property>
		<property name="targetMethod" value="remindClassIsOver"></property>
		<property name="concurrent" value="true" /><!-- 作业不并发调度  -->
	</bean>






	<!-- 定义trigger 触发器 -->
	<bean id="cronTriggerHaveClass" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetailRemindHaveClass"></property>
		<property name="cronExpression" value="0/60 * * * * ?"></property>
	</bean>

	<!-- 定义trigger 触发器 -->
	<bean id="cronTriggerClassIsOver" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetailRemindClassIsOver"></property>
		<property name="cronExpression" value="0/60 * * * * ?"></property>
	</bean>





	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
			<ref bean="cronTriggerHaveClass"/>
			<ref bean="cronTriggerClassIsOver"/>
			<ref bean="cronTriggerAdminNewContent"/>
			</list>
		</property>
	</bean>



	<aop:config proxy-target-class="true"/>
	<bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>